00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 21/02/2025 19:14:02

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      : Infinite runner game
00000000                             3  * Written by : Brandon Jaroszczak
00000000                             4  * Date       : 05/02/2025
00000000                             5  * Description: Built on top of the Project Starter Kit
00000000                             6  *-----------------------------------------------------------
00001000                             7      ORG    $1000
00001000                             8  START:                  ; first instruction of program
00001000                             9  *-----------------------------------------------------------
00001000                            10  * Subroutine    : Initialise
00001000                            11  * Description   : Initialise game data into memory such as 
00001000                            12  * sounds and screen size
00001000                            13  *-----------------------------------------------------------
00001000                            14  INITIALISE:
00001000                            15      ; Initialise Sounds
00001000  6100 0482                 16      BSR     RUN_LOAD                ; Load Run Sound into Memory
00001004  6100 049C                 17      BSR     JUMP_LOAD               ; Load Jump Sound into Memory
00001008  6100 04B6                 18      BSR     OPPS_LOAD               ; Load Opps (Collision) Sound into Memory
0000100C                            19  
0000100C                            20      ; Screen Size
0000100C  103C 0021                 21      MOVE.B  #TC_SCREEN, D0          ; access screen information
00001010  223C 00000000             22      MOVE.L  #TC_S_SIZE, D1          ; placing 0 in D1 triggers loading screen size information
00001016  4E4F                      23      TRAP    #15                     ; interpret D0 and D1 for screen size
00001018  33C1 00001E52             24      MOVE.W  D1,         SCREEN_H    ; place screen height in memory location
0000101E  4841                      25      SWAP    D1                      ; Swap top and bottom word to retrive screen size
00001020  33C1 00001E50             26      MOVE.W  D1,         SCREEN_W    ; place screen width in memory location
00001026                            27  
00001026                            28      ; Place the Player at the center of the screen
00001026  4281                      29      CLR.L   D1                      ; Clear contents of D1 (XOR is faster)
00001028  3239 00001E50             30      MOVE.W  SCREEN_W,   D1          ; Place Screen width in D1
0000102E  82FC 0002                 31      DIVU    #02,        D1          ; divide by 2 for center on X Axis
00001032  23C1 00001E58             32      MOVE.L  D1,         PLAYER_X    ; Players X Position
00001038                            33  
00001038  4281                      34      CLR.L   D1                      ; Clear contents of D1 (XOR is faster)
0000103A  3239 00001E52             35      MOVE.W  SCREEN_H,   D1          ; Place Screen width in D1
00001040  82FC 0002                 36      DIVU    #02,        D1          ; divide by 2 for center on Y Axis
00001044  23C1 00001E5C             37      MOVE.L  D1,         PLAYER_Y    ; Players Y Position
0000104A                            38  
0000104A                            39      ; Initialise Player Score
0000104A  4281                      40      CLR.L   D1                      ; Clear contents of D1 (XOR is faster)
0000104C  7200                      41      MOVE.L  #00,        D1          ; Init Score
0000104E  23C1 00001E60             42      MOVE.L  D1,         PLAYER_SCORE
00001054                            43  
00001054                            44      ; Initialise Player Velocity
00001054  4281                      45      CLR.L   D1                      ; Clear contents of D1 (XOR is faster)
00001056  123C 0000                 46      MOVE.B  #PLYR_DFLT_V,D1         ; Init Player Velocity
0000105A  23C1 00001E64             47      MOVE.L  D1,         PLYR_VELOCITY
00001060                            48  
00001060                            49      ; Initialise Player Gravity
00001060  4281                      50      CLR.L   D1                      ; Clear contents of D1 (XOR is faster)
00001062  223C 00000001             51      MOVE.L  #PLYR_DFLT_G,D1         ; Init Player Gravity
00001068  23C1 00001E68             52      MOVE.L  D1,         PLYR_GRAVITY
0000106E                            53  
0000106E                            54      ; Initialize Player on Ground
0000106E  23FC 00000001 00001E6C    55      MOVE.L  #GND_TRUE,  PLYR_ON_GND ; Init Player on Ground
00001078                            56  
00001078                            57      ; Initial Position for Enemy
00001078  4281                      58      CLR.L   D1                      ; Clear contents of D1 (XOR is faster)
0000107A  3239 00001E50             59      MOVE.W  SCREEN_W,   D1          ; Place Screen width in D1
00001080  23C1 00001E70             60      MOVE.L  D1,         ENEMY_X     ; Enemy X Position
00001086                            61  
00001086  4281                      62      CLR.L   D1                      ; Clear contents of D1 (XOR is faster)
00001088  3239 00001E52             63      MOVE.W  SCREEN_H,   D1          ; Place Screen width in D1
0000108E  82FC 0002                 64      DIVU    #02,        D1          ; divide by 2 for center on Y Axis
00001092  23C1 00001E74             65      MOVE.L  D1,         ENEMY_Y     ; Enemy Y Position
00001098                            66  
00001098                            67      ; Enable the screen back buffer(see easy 68k help)
00001098  103C 005C                 68      MOVE.B  #TC_DBL_BUF,D0          ; 92 Enables Double Buffer
0000109C  123C 0011                 69      MOVE.B  #17,        D1          ; Combine Tasks
000010A0  4E4F                      70      TRAP    #15                     ; Trap (Perform action)
000010A2                            71  
000010A2                            72      ; Clear the screen (see easy 68k help)
000010A2  103C 000B                 73      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
000010A6  323C FF00                 74      MOVE.W  #$FF00,     D1          ; Fill Screen Clear
000010AA  4E4F                      75      TRAP    #15                     ; Trap (Perform action)
000010AC                            76  *-----------------------------------------------------------
000010AC                            77  * Subroutine    : Game
000010AC                            78  * Description   : Game including main GameLoop. GameLoop is like
000010AC                            79  * a while loop in that it runs forever until interupted
000010AC                            80  * (Input, Update, Draw). The Enemies Run at Player Jump to Avoid
000010AC                            81  *-----------------------------------------------------------
000010AC  6000 05FC                 82      BRA     MAIN_MENU
000010B0                            83  GAME:
000010B0  6100 03E4                 84      BSR     PLAY_RUN                ; Play Run Wav
000010B4                            85  GAMELOOP:
000010B4                            86      ; Main Gameloop
000010B4  6100 0018                 87      BSR     INPUT                   ; Check Keyboard Input
000010B8  6100 0088                 88      BSR     UPDATE                  ; Update positions and points
000010BC  6100 0348                 89      BSR     IS_PLAYER_ON_GND        ; Check if player is on ground
000010C0  6100 04F2                 90      BSR     CHECK_COLLISIONS        ; Check for Collisions
000010C4  6100 0116                 91      BSR     DRAW                    ; Draw the Scene
000010C8  6100 058E                 92      BSR     ADD_DELAY               ; Add a delay to slow down the game
000010CC  60E6                      93      BRA     GAMELOOP                ; Loop back to GameLoop
000010CE                            94  *-----------------------------------------------------------
000010CE                            95  * Subroutine    : Input
000010CE                            96  * Description   : Process Keyboard Input
000010CE                            97  *-----------------------------------------------------------
000010CE                            98  INPUT:
000010CE                            99      ; Process Input
000010CE  4281                     100      CLR.L   D1                      ; Clear Data Register
000010D0  103C 0013                101      MOVE.B  #TC_KEYCODE,D0          ; Listen for Keys
000010D4  4E4F                     102      TRAP    #15                     ; Trap (Perform action)
000010D6  1401                     103      MOVE.B  D1,         D2          ; Move last key D1 to D2
000010D8  B43C 0000                104      CMP.B   #00,        D2          ; Key is pressed
000010DC  4E4F                     105      TRAP    #15                     ; Trap for Last Key
000010DE                           106      ; Check if key still pressed
000010DE  B23C 00FF                107      CMP.B   #$FF,       D1          ; Is it still pressed
000010E2  6700 0004                108      BEQ     PROCESS_INPUT           ; Process Last Key
000010E6                           109      
000010E6  4E75                     110      RTS                             ; Return to subroutine
000010E8                           111  *-----------------------------------------------------------
000010E8                           112  * Subroutine    : Process Input
000010E8                           113  * Description   : Branch based on keys pressed
000010E8                           114  *-----------------------------------------------------------
000010E8                           115  PROCESS_INPUT:
000010E8  23C2 00001E54            116      MOVE.L  D2,         CURRENT_KEY ; Put Current Key in Memory
000010EE  0CB9 0000001B 00001E54   117      CMP.L   #ESCAPE,    CURRENT_KEY ; Is Current Key Escape
000010F8  6700 0B02                118      BEQ     EXIT                    ; Exit if Escape
000010FC  0CB9 00000072 00001E54   119      CMP.L   #F3KEY,     CURRENT_KEY
00001106  6600 0026                120      BNE SKIP_TOGGLE
0000110A  0C39 0001 00001E78       121      CMP.B   #1, SHOW_ADVANCED_INFO
00001112  6700 0006                122      BEQ TOGGLE_OFF
00001116  6600 000E                123      BNE TOGGLE_ON
0000111A                           124      
0000111A                           125  TOGGLE_OFF:
0000111A  13FC 0000 00001E78       126      MOVE.B #0, SHOW_ADVANCED_INFO
00001122  6000 000A                127      BRA SKIP_TOGGLE
00001126                           128  
00001126                           129  TOGGLE_ON:
00001126  13FC 0001 00001E78       130      MOVE.B #1, SHOW_ADVANCED_INFO
0000112E                           131      
0000112E                           132  SKIP_TOGGLE:
0000112E  0CB9 00000020 00001E54   133      CMP.L   #SPACEBAR,  CURRENT_KEY ; Is Current Key Spacebar
00001138  6700 0320                134      BEQ     JUMP                    ; Jump
0000113C  6000 0340                135      BRA     IDLE                    ; Or Idle
00001140  4E75                     136      RTS                             ; Return to subroutine
00001142                           137  *-----------------------------------------------------------
00001142                           138  * Subroutine    : Update
00001142                           139  * Description   : Main update loop update Player and Enemies
00001142                           140  *-----------------------------------------------------------
00001142                           141  UPDATE:
00001142  0C39 0000 00001E7A       142      CMP.B   #0, JUMP_SKIP_FRAMES
0000114A  6E00 002C                143      BGT     SKIP_JUMP_UPDATE
0000114E                           144      ; Update the Players Positon based on Velocity and Gravity
0000114E  4281                     145      CLR.L   D1                      ; Clear contents of D1 (XOR is faster)
00001150  2239 00001E64            146      MOVE.L  PLYR_VELOCITY, D1       ; Fetch Player Velocity
00001156  2439 00001E68            147      MOVE.L  PLYR_GRAVITY, D2        ; Fetch Player Gravity
0000115C  D282                     148      ADD.L   D2,         D1          ; Add Gravity to Velocity
0000115E  23C1 00001E64            149      MOVE.L  D1,         PLYR_VELOCITY ; Update Player Velocity
00001164  D2B9 00001E5C            150      ADD.L   PLAYER_Y,   D1          ; Add Velocity to Player
0000116A  23C1 00001E5C            151      MOVE.L  D1,         PLAYER_Y    ; Update Players Y Position 
00001170  13FC 0004 00001E7A       152      MOVE.B  #4, JUMP_SKIP_FRAMES
00001178                           153  SKIP_JUMP_UPDATE:
00001178  5339 00001E7A            154      SUB.B   #1, JUMP_SKIP_FRAMES
0000117E                           155      ; Move the Enemy
0000117E  4281                     156      CLR.L   D1                      ; Clear contents of D1 (XOR is faster)
00001180  4281                     157      CLR.L   D1                      ; Clear the contents of D0
00001182  2239 00001E70            158      MOVE.L  ENEMY_X,    D1          ; Move the Enemy X Position to D0
00001188  B2BC 00000000            159      CMP.L   #00,        D1
0000118E  6F00 0010                160      BLE     RESET_ENEMY_POSITION    ; Reset Enemy if off Screen
00001192  6000 0004                161      BRA     MOVE_ENEMY              ; Move the Enemy
00001196                           162  
00001196  4E75                     163      RTS                             ; Return to subroutine
00001198                           164  *-----------------------------------------------------------
00001198                           165  * Subroutine    : Move Enemy
00001198                           166  * Description   : Move Enemy Right to Left
00001198                           167  *-----------------------------------------------------------
00001198                           168  MOVE_ENEMY:
00001198  53B9 00001E70            169      SUB.L   #01,        ENEMY_X     ; Move enemy by X Value
0000119E  4E75                     170      RTS
000011A0                           171  *-----------------------------------------------------------
000011A0                           172  * Subroutine    : Reset Enemy
000011A0                           173  * Description   : Reset Enemy if to passes 0 to Right of Screen
000011A0                           174  *-----------------------------------------------------------
000011A0                           175  RESET_ENEMY_POSITION:
000011A0  B381                     176      EOR.L D1, D1            ; clear D1
000011A2  3239 00001E50            177      MOVE.W  SCREEN_W, D1    ; this is needed because screen W is a word 
000011A8  23C1 00001E70            178      MOVE.L  D1, ENEMY_X     ; enemy X Position
000011AE                           179      
000011AE  103C 0008                180      MOVE.B  #8, D0          ; get the current time in 1/100s since midnight
000011B2  4E4F                     181      TRAP    #15
000011B4  C2BC 0000FFFF            182      AND.L   #$0000FFFF, D1  ; clear the upper word of D1 (DIVU only works with 16 bits or less so it reduces the time to 16 bits, the most important "random" part is in the last 8 bits anyways)
000011BA  82FC 0032                183      DIVU    #50, D1         ; divide the time by 50 (amount of Y variance in enemy)
000011BE  4841                     184      SWAP    D1              ; swap the upper and lower words to have the remainder on the lower word
000011C0  C2BC 0000FFFF            185      AND.L   #$0000FFFF, D1  ; clear the upper word of D1
000011C6  3039 00001E52            186      MOVE.W  SCREEN_H, D0    ; get screen height
000011CC  80FC 0002                187      DIVU    #2, D0          ; half the screen height
000011D0  9081                     188      SUB.L   D1, D0          ; subtract the result (i.e random enemy height)
000011D2  23C0 00001E74            189      MOVE.L  D0, ENEMY_Y     ; new enemy y pos
000011D8  B180                     190      EOR.L D0, D0            ; clear D0 just in case
000011DA  4E75                     191      RTS
000011DC                           192  *-----------------------------------------------------------
000011DC                           193  * Subroutine    : Draw
000011DC                           194  * Description   : Draw Screen
000011DC                           195  *-----------------------------------------------------------
000011DC                           196  DRAW: 
000011DC                           197      ; Clear the screen
000011DC  103C 000B                198      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
000011E0  323C FF00                199      MOVE.W  #$FF00,     D1          ; Clear contents
000011E4  4E4F                     200      TRAP    #15                     ; Trap (Perform action)
000011E6                           201  
000011E6  6100 036A                202      BSR     DRAW_ENVIRONMENT        ; Draw the environment
000011EA  6100 0012                203      BSR     DRAW_PLYR_DATA          ; Draw Draw Score, HUD, Player X and Y
000011EE  6100 02EE                204      BSR     DRAW_PLAYER             ; Draw Player
000011F2  6100 0328                205      BSR     DRAW_ENEMY              ; Draw Enemy
000011F6                           206      ; draw
000011F6  103C 005E                207      MOVE.B  #94,        D0
000011FA  4E4F                     208      TRAP    #15
000011FC  4E75                     209      RTS                             ; Return to subroutine
000011FE                           210  *-----------------------------------------------------------
000011FE                           211  * Subroutine    : Draw Player Data
000011FE                           212  * Description   : Draw Player X, Y, Velocity, Gravity and OnGround
000011FE                           213  *-----------------------------------------------------------
000011FE                           214  DRAW_PLYR_DATA:
000011FE  4281                     215      CLR.L   D1                      ; Clear contents of D1 (XOR is faster)
00001200                           216  
00001200                           217      ; Difficulty Message
00001200  103C 000B                218      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00001204  323C 0201                219      MOVE.W  #$0201,     D1          ; Col 02, Row 01
00001208  4E4F                     220      TRAP    #15                     ; Trap (Perform action)
0000120A  43F9 00001D50            221      LEA     DIFFICULTY_MSG,  A1     ; Difficulty Message
00001210  303C 000D                222      MOVE    #13,        D0          ; No Line feed
00001214  4E4F                     223      TRAP    #15                     ; Trap (Perform action)
00001216                           224  
00001216                           225      ; Difficulty message value
00001216  103C 000B                226      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
0000121A  323C 0E01                227      MOVE.W  #$0E01,     D1          ; Col 09, Row 01
0000121E  4E4F                     228      TRAP    #15                     ; Trap (Perform action)
00001220  0C39 0002 00001C2B       229      CMP.B   #2, DIFFICULTY
00001228  6D00 000A                230      BLT RENDER_EASY     ; =1
0000122C  6700 0010                231      BEQ RENDER_NORMAL   ; =2
00001230  6E00 0016                232      BGT RENDER_HARD     ; =3
00001234                           233      
00001234                           234  RENDER_EASY:
00001234  43F9 00001D5C            235      LEA DIFFICULTY_MSG_EASY, A1
0000123A  6000 0012                236      BRA CONTINUE_DRAWING
0000123E                           237  
0000123E                           238  RENDER_NORMAL:
0000123E  43F9 00001D61            239      LEA DIFFICULTY_MSG_NORMAL, A1
00001244  6000 0008                240      BRA CONTINUE_DRAWING
00001248                           241      
00001248                           242  RENDER_HARD:
00001248  43F9 00001D68            243      LEA DIFFICULTY_MSG_HARD, A1
0000124E                           244  
0000124E                           245  CONTINUE_DRAWING:
0000124E  103C 000D                246      MOVE.B  #13, D0          
00001252  4E4F                     247      TRAP #15
00001254                           248  
00001254                           249      ; Player Score Message
00001254  103C 000B                250      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00001258  323C 0202                251      MOVE.W  #$0202,     D1          ; Col 02, Row 01
0000125C  4E4F                     252      TRAP    #15                     ; Trap (Perform action)
0000125E  43F9 00001C3C            253      LEA     SCORE_MSG,  A1          ; Score Message
00001264  303C 000D                254      MOVE    #13,        D0          ; No Line feed
00001268  4E4F                     255      TRAP    #15                     ; Trap (Perform action)
0000126A                           256  
0000126A                           257      ; Player Score Value
0000126A  103C 000B                258      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
0000126E  323C 0902                259      MOVE.W  #$0902,     D1          ; Col 09, Row 01
00001272  4E4F                     260      TRAP    #15                     ; Trap (Perform action)
00001274  103C 0003                261      MOVE.B  #03,        D0          ; Display number at D1.L
00001278  2239 00001E60            262      MOVE.L  PLAYER_SCORE,D1         ; Move Score to D1.L
0000127E  4E4F                     263      TRAP    #15                     ; Trap (Perform action)
00001280                           264      
00001280                           265      ; Lives Message
00001280  103C 000B                266      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00001284  323C 0203                267      MOVE.W  #$0203,     D1          ; Col 02, Row 01
00001288  4E4F                     268      TRAP    #15                     ; Trap (Perform action)
0000128A  43F9 00001D6D            269      LEA     LIVES_MSG,  A1          ; Score Message
00001290  303C 000D                270      MOVE    #13,        D0          ; No Line feed
00001294  4E4F                     271      TRAP    #15                     ; Trap (Perform action)
00001296                           272  
00001296                           273      ; Lives Value
00001296  103C 000B                274      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
0000129A  323C 0903                275      MOVE.W  #$0903,     D1          ; Col 09, Row 01
0000129E  4E4F                     276      TRAP    #15                     ; Trap (Perform action)
000012A0  303C 0003                277      MOVE    #3,        D0          ; No Line feed
000012A4  B381                     278      EOR.L   D1, D1
000012A6  1239 00001C2A            279      MOVE.B  LIVES, D1
000012AC  4E4F                     280      TRAP    #15                     ; Trap (Perform action)
000012AE                           281      
000012AE  0C39 0000 00001E78       282      CMP.B   #0, SHOW_ADVANCED_INFO
000012B6  6700 014C                283      BEQ     SKIP_MESSAGES
000012BA                           284      ; Player X Message
000012BA  103C 000B                285      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
000012BE  323C 0204                286      MOVE.W  #$0204,     D1          ; Col 02, Row 02
000012C2  4E4F                     287      TRAP    #15                     ; Trap (Perform action)
000012C4  43F9 00001C74            288      LEA     X_MSG,      A1          ; X Message
000012CA  303C 000D                289      MOVE    #13,        D0          ; No Line feed
000012CE  4E4F                     290      TRAP    #15                     ; Trap (Perform action)
000012D0                           291      
000012D0                           292      ; Player X
000012D0  103C 000B                293      MOVE.B  #TC_CURSR_P, D0          ; Set Cursor Position
000012D4  323C 0504                294      MOVE.W  #$0504,     D1          ; Col 05, Row 02
000012D8  4E4F                     295      TRAP    #15                     ; Trap (Perform action)
000012DA  103C 0003                296      MOVE.B  #03,        D0          ; Display number at D1.L
000012DE  2239 00001E58            297      MOVE.L  PLAYER_X,   D1          ; Move X to D1.L
000012E4  4E4F                     298      TRAP    #15                     ; Trap (Perform action)
000012E6                           299      
000012E6                           300      ; Player Y Message
000012E6  103C 000B                301      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
000012EA  323C 0A04                302      MOVE.W  #$0A04,     D1          ; Col 10, Row 02
000012EE  4E4F                     303      TRAP    #15                     ; Trap (Perform action)
000012F0  43F9 00001C77            304      LEA     Y_MSG,      A1          ; Y Message
000012F6  303C 000D                305      MOVE    #13,        D0          ; No Line feed
000012FA  4E4F                     306      TRAP    #15                     ; Trap (Perform action)
000012FC                           307      
000012FC                           308      ; Player Y
000012FC  103C 000B                309      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00001300  323C 0D04                310      MOVE.W  #$0D04,     D1          ; Col 12, Row 02
00001304  4E4F                     311      TRAP    #15                     ; Trap (Perform action)
00001306  103C 0003                312      MOVE.B  #03,        D0          ; Display number at D1.L
0000130A  2239 00001E5C            313      MOVE.L  PLAYER_Y,   D1          ; Move X to D1.L
00001310  4E4F                     314      TRAP    #15                     ; Trap (Perform action) 
00001312                           315  
00001312                           316      ; Player Velocity Message
00001312  103C 000B                317      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00001316  323C 0205                318      MOVE.W  #$0205,     D1          ; Col 02, Row 03
0000131A  4E4F                     319      TRAP    #15                     ; Trap (Perform action)
0000131C  43F9 00001C7A            320      LEA     V_MSG,      A1          ; Velocity Message
00001322  303C 000D                321      MOVE    #13,        D0          ; No Line feed
00001326  4E4F                     322      TRAP    #15                     ; Trap (Perform action)
00001328                           323      
00001328                           324      ; Player Velocity
00001328  103C 000B                325      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
0000132C  323C 0505                326      MOVE.W  #$0505,     D1          ; Col 05, Row 03
00001330  4E4F                     327      TRAP    #15                     ; Trap (Perform action)
00001332  103C 0003                328      MOVE.B  #03,        D0          ; Display number at D1.L
00001336  2239 00001E64            329      MOVE.L  PLYR_VELOCITY,D1        ; Move X to D1.L
0000133C  4E4F                     330      TRAP    #15                     ; Trap (Perform action)
0000133E                           331      
0000133E                           332      ; Player Gravity Message
0000133E  103C 000B                333      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00001342  323C 0A05                334      MOVE.W  #$0A05,     D1          ; Col 10, Row 03
00001346  4E4F                     335      TRAP    #15                     ; Trap (Perform action)
00001348  43F9 00001C7D            336      LEA     G_MSG,      A1          ; G Message
0000134E  303C 000D                337      MOVE    #13,        D0          ; No Line feed
00001352  4E4F                     338      TRAP    #15                     ; Trap (Perform action)
00001354                           339      
00001354                           340      ; Player Gravity
00001354  103C 000B                341      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00001358  323C 0D05                342      MOVE.W  #$0D05,     D1          ; Col 12, Row 03
0000135C  4E4F                     343      TRAP    #15                     ; Trap (Perform action)
0000135E  103C 0003                344      MOVE.B  #03,        D0          ; Display number at D1.L
00001362  2239 00001E68            345      MOVE.L  PLYR_GRAVITY,D1         ; Move Gravity to D1.L
00001368  4E4F                     346      TRAP    #15                     ; Trap (Perform action)
0000136A                           347  
0000136A                           348      ; Player On Ground Message
0000136A  103C 000B                349      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
0000136E  323C 0206                350      MOVE.W  #$0206,     D1          ; Col 10, Row 03
00001372  4E4F                     351      TRAP    #15                     ; Trap (Perform action)
00001374  43F9 00001C80            352      LEA     GND_MSG,    A1          ; On Ground Message
0000137A  303C 000D                353      MOVE    #13,        D0          ; No Line feed
0000137E  4E4F                     354      TRAP    #15                     ; Trap (Perform action)
00001380                           355      
00001380                           356      ; Player On Ground
00001380  103C 000B                357      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00001384  323C 0606                358      MOVE.W  #$0606,     D1          ; Col 06, Row 04
00001388  4E4F                     359      TRAP    #15                     ; Trap (Perform action)
0000138A  103C 0003                360      MOVE.B  #03,        D0          ; Display number at D1.L
0000138E  2239 00001E6C            361      MOVE.L  PLYR_ON_GND,D1          ; Move Play on Ground ? to D1.L
00001394  4E4F                     362      TRAP    #15                     ; Trap (Perform action)
00001396                           363  
00001396                           364      ; Show Keys Pressed
00001396  103C 000B                365      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
0000139A  323C 2001                366      MOVE.W  #$2001,     D1          ; Col 20, Row 1
0000139E  4E4F                     367      TRAP    #15                     ; Trap (Perform action)
000013A0  43F9 00001C44            368      LEA     KEYCODE_MSG, A1         ; Keycode
000013A6  303C 000D                369      MOVE    #13,        D0          ; No Line feed
000013AA  4E4F                     370      TRAP    #15                     ; Trap (Perform action)
000013AC                           371  
000013AC                           372      ; Show KeyCode
000013AC  103C 000B                373      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
000013B0  323C 2901                374      MOVE.W  #$2901,     D1          ; Col 30, Row 1
000013B4  4E4F                     375      TRAP    #15                     ; Trap (Perform action)    
000013B6  2239 00001E54            376      MOVE.L  CURRENT_KEY,D1          ; Move Key Pressed to D1
000013BC  103C 0003                377      MOVE.B  #03,        D0          ; Display the contents of D1
000013C0  4E4F                     378      TRAP    #15                     ; Trap (Perform action)
000013C2                           379  
000013C2                           380      ; Show delay
000013C2  103C 000B                381      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
000013C6  323C 0207                382      MOVE.W  #$0207,     D1          ; Col 02, Row 05
000013CA  4E4F                     383      TRAP    #15                     ; Trap (Perform action)
000013CC  303C 0003                384      MOVE    #3,        D0          ; No Line feed
000013D0  2239 00001C2C            385      MOVE.L  DELAY, D1
000013D6  4E4F                     386      TRAP    #15                     ; Trap (Perform action)
000013D8                           387  
000013D8                           388      ; Show cycles to next increase
000013D8  103C 000B                389      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
000013DC  323C 0208                390      MOVE.W  #$0208,     D1          ; Col 02, Row 06
000013E0  4E4F                     391      TRAP    #15                     ; Trap (Perform action)
000013E2  303C 0003                392      MOVE    #3,        D0          ; No Line feed
000013E6  2239 00001C34            393      MOVE.L  CYCLES_TO_NEXT_INCREASE, D1
000013EC  4E4F                     394      TRAP    #15                     ; Trap (Perform action)
000013EE                           395  
000013EE                           396      ; Show minimum delay
000013EE  103C 000B                397      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
000013F2  323C 0209                398      MOVE.W  #$0209,     D1          ; Col 02, Row 07
000013F6  4E4F                     399      TRAP    #15                     ; Trap (Perform action)
000013F8  303C 0003                400      MOVE    #3,        D0          ; No Line feed
000013FC  2239 00001C38            401      MOVE.L  MINIMUM_DELAY, D1
00001402  4E4F                     402      TRAP    #15                     ; Trap (Perform action)
00001404                           403  
00001404                           404  SKIP_MESSAGES:
00001404  4E75                     405      RTS
00001406                           406  *-----------------------------------------------------------
00001406                           407  * Subroutine    : Player is on Ground
00001406                           408  * Description   : Check if the Player is on or off Ground
00001406                           409  *-----------------------------------------------------------
00001406                           410  IS_PLAYER_ON_GND:
00001406                           411      ; Check if Player is on Ground
00001406  4281                     412      CLR.L   D1                      ; Clear contents of D1 (XOR is faster)
00001408  4282                     413      CLR.L   D2                      ; Clear contents of D2 (XOR is faster)
0000140A  3239 00001E52            414      MOVE.W  SCREEN_H,   D1          ; Place Screen width in D1
00001410  82FC 0002                415      DIVU    #02,        D1          ; divide by 2 for center on Y Axis
00001414  2439 00001E5C            416      MOVE.L  PLAYER_Y,   D2          ; Player Y Position
0000141A  B441                     417      CMP     D1,         D2          ; Compare middle of Screen with Players Y Position 
0000141C  6C00 0008                418      BGE     SET_ON_GROUND           ; The Player is on the Ground Plane
00001420  6D00 002C                419      BLT     SET_OFF_GROUND          ; The Player is off the Ground
00001424  4E75                     420      RTS                             ; Return to subroutine
00001426                           421  *-----------------------------------------------------------
00001426                           422  * Subroutine    : On Ground
00001426                           423  * Description   : Set the Player On Ground
00001426                           424  *-----------------------------------------------------------
00001426                           425  SET_ON_GROUND:
00001426  4281                     426      CLR.L   D1                      ; Clear contents of D1 (XOR is faster)
00001428  3239 00001E52            427      MOVE.W  SCREEN_H,   D1          ; Place Screen width in D1
0000142E  82FC 0002                428      DIVU    #02,        D1          ; divide by 2 for center on Y Axis
00001432  23C1 00001E5C            429      MOVE.L  D1,         PLAYER_Y    ; Reset the Player Y Position
00001438  4281                     430      CLR.L   D1                      ; Clear contents of D1 (XOR is faster)
0000143A  7200                     431      MOVE.L  #00,        D1          ; Player Velocity
0000143C  23C1 00001E64            432      MOVE.L  D1,         PLYR_VELOCITY ; Set Player Velocity
00001442  23FC 00000001 00001E6C   433      MOVE.L  #GND_TRUE,  PLYR_ON_GND ; Player is on Ground
0000144C  4E75                     434      RTS
0000144E                           435  *-----------------------------------------------------------
0000144E                           436  * Subroutine    : Off Ground
0000144E                           437  * Description   : Set the Player Off Ground
0000144E                           438  *-----------------------------------------------------------
0000144E                           439  SET_OFF_GROUND:
0000144E  23FC 00000000 00001E6C   440      MOVE.L  #GND_FALSE, PLYR_ON_GND ; Player if off Ground
00001458  4E75                     441      RTS                             ; Return to subroutine
0000145A                           442  *-----------------------------------------------------------
0000145A                           443  * Subroutine    : Jump
0000145A                           444  * Description   : Perform a Jump
0000145A                           445  *-----------------------------------------------------------
0000145A                           446  JUMP:
0000145A  0CB9 00000001 00001E6C   447      CMP.L   #GND_TRUE,PLYR_ON_GND   ; Player is on the Ground ?
00001464  6700 0006                448      BEQ     PERFORM_JUMP            ; Do Jump
00001468  6000 0012                449      BRA     JUMP_DONE               ;
0000146C                           450  PERFORM_JUMP:
0000146C  6100 0046                451      BSR     PLAY_JUMP               ; Play jump sound
00001470  23FC FFFFFFEC 00001E64   452      MOVE.L  #PLYR_JUMP_V,PLYR_VELOCITY ; Set the players velocity to true
0000147A  4E75                     453      RTS                             ; Return to subroutine
0000147C                           454  JUMP_DONE:
0000147C  4E75                     455      RTS                             ; Return to subroutine
0000147E                           456  *-----------------------------------------------------------
0000147E                           457  * Subroutine    : Idle
0000147E                           458  * Description   : Perform a Idle
0000147E                           459  *----------------------------------------------------------- 
0000147E                           460  IDLE:
0000147E  6100 0016                461      BSR     PLAY_RUN                ; Play Run Wav
00001482  4E75                     462      RTS                             ; Return to subroutine
00001484                           463  *-----------------------------------------------------------
00001484                           464  * Subroutines   : Sound Load and Play
00001484                           465  * Description   : Initialise game sounds into memory 
00001484                           466  * Current Sounds are RUN, JUMP and Opps for Collision
00001484                           467  *-----------------------------------------------------------
00001484                           468  RUN_LOAD:
00001484  43F9 00001E84            469      LEA     RUN_WAV,    A1          ; Load Wav File into A1
0000148A  323C 0000                470      MOVE    #RUN_INDEX, D1          ; Assign it INDEX
0000148E  303C 0047                471      MOVE    #71,        D0          ; Load into memory
00001492  4E4F                     472      TRAP    #15                     ; Trap (Perform action)
00001494  4E75                     473      RTS                             ; Return to subroutine
00001496                           474  
00001496                           475  PLAY_RUN:
00001496  323C 0000                476      MOVE    #RUN_INDEX, D1          ; Load Sound INDEX
0000149A  303C 0048                477      MOVE    #72,        D0          ; Play Sound
0000149E  4E4F                     478      TRAP    #15                     ; Trap (Perform action)
000014A0  4E75                     479      RTS                             ; Return to subroutine
000014A2                           480  
000014A2                           481  JUMP_LOAD:
000014A2  43F9 00001E7B            482      LEA     JUMP_WAV,   A1          ; Load Wav File into A1
000014A8  323C 0001                483      MOVE    #JMP_INDEX, D1          ; Assign it INDEX
000014AC  303C 0047                484      MOVE    #71,        D0          ; Load into memory
000014B0  4E4F                     485      TRAP    #15                     ; Trap (Perform action)
000014B2  4E75                     486      RTS                             ; Return to subroutine
000014B4                           487  
000014B4                           488  PLAY_JUMP:
000014B4  323C 0001                489      MOVE    #JMP_INDEX, D1          ; Load Sound INDEX
000014B8  303C 0048                490      MOVE    #72,        D0          ; Play Sound
000014BC  4E4F                     491      TRAP    #15                     ; Trap (Perform action)
000014BE  4E75                     492      RTS                             ; Return to subroutine
000014C0                           493  
000014C0                           494  OPPS_LOAD:
000014C0  43F9 00001E8C            495      LEA     OPPS_WAV,   A1          ; Load Wav File into A1
000014C6  323C 0002                496      MOVE    #OPPS_INDEX,D1          ; Assign it INDEX
000014CA  303C 0047                497      MOVE    #71,        D0          ; Load into memory
000014CE  4E4F                     498      TRAP    #15                     ; Trap (Perform action)
000014D0  4E75                     499      RTS                             ; Return to subroutine
000014D2                           500  
000014D2                           501  PLAY_OPPS:
000014D2  323C 0002                502      MOVE    #OPPS_INDEX,D1          ; Load Sound INDEX
000014D6  303C 0048                503      MOVE    #72,        D0          ; Play Sound
000014DA  4E4F                     504      TRAP    #15                     ; Trap (Perform action)
000014DC  4E75                     505      RTS                             ; Return to subroutine
000014DE                           506  *-----------------------------------------------------------
000014DE                           507  * Subroutine    : Draw Player
000014DE                           508  * Description   : Draw Player Square
000014DE                           509  *-----------------------------------------------------------
000014DE                           510  DRAW_PLAYER:
000014DE                           511      ; Set Pixel Colors
000014DE  223C 00FFFFFF            512      MOVE.L  #WHITE,     D1          ; Set Background color
000014E4  103C 0050                513      MOVE.B  #80,        D0          ; Task for Background Color
000014E8  4E4F                     514      TRAP    #15                     ; Trap (Perform action)
000014EA  103C 0051                515      MOVE.B  #81, D0
000014EE  4E4F                     516      TRAP    #15
000014F0                           517  
000014F0                           518      ; Set X, Y, Width and Height
000014F0  2239 00001E58            519      MOVE.L  PLAYER_X,   D1          ; X
000014F6  2439 00001E5C            520      MOVE.L  PLAYER_Y,   D2          ; Y
000014FC  2639 00001E58            521      MOVE.L  PLAYER_X,   D3
00001502  0683 00000008            522      ADD.L   #PLYR_W_INIT,   D3      ; Width
00001508  2839 00001E5C            523      MOVE.L  PLAYER_Y,   D4 
0000150E  0684 00000008            524      ADD.L   #PLYR_H_INIT,   D4      ; Height
00001514                           525      
00001514                           526      ; Draw Player
00001514  103C 0057                527      MOVE.B  #87,        D0          ; Draw Player
00001518  4E4F                     528      TRAP    #15                     ; Trap (Perform action)
0000151A  4E75                     529      RTS                             ; Return to subroutine
0000151C                           530  
0000151C                           531  *-----------------------------------------------------------
0000151C                           532  * Subroutine    : Draw Enemy
0000151C                           533  * Description   : Draw Enemy Square
0000151C                           534  *-----------------------------------------------------------
0000151C                           535  DRAW_ENEMY:
0000151C                           536      ; Set Pixel Colors
0000151C  2239 00001E44            537      MOVE.L  ENEMY_COLOUR, D1        ; Set Background color
00001522  103C 0050                538      MOVE.B  #80,        D0          ; Task for Background Color
00001526  4E4F                     539      TRAP    #15                     ; Trap (Perform action)
00001528  103C 0051                540      MOVE.B  #81, D0
0000152C  4E4F                     541      TRAP    #15
0000152E                           542  
0000152E                           543      ; Set X, Y, Width and Height    
0000152E  2239 00001E70            544      MOVE.L  ENEMY_X,    D1          ; X
00001534  2439 00001E74            545      MOVE.L  ENEMY_Y,    D2          ; Y
0000153A  2601                     546      MOVE.L  D1,    D3
0000153C  2802                     547      MOVE.L  D2,    D4
0000153E  D6B9 00001C22            548      ADD.L   ENEMY_W,   D3      ; Width
00001544  D8B9 00001C26            549      ADD.L   ENEMY_H,   D4      ; Height
0000154A                           550      
0000154A                           551      ; Draw Enemy    
0000154A  103C 0057                552      MOVE.B  #87,        D0          ; Draw Enemy
0000154E  4E4F                     553      TRAP    #15                     ; Trap (Perform action)
00001550  4E75                     554      RTS                             ; Return to subroutine
00001552                           555  *-----------------------------------------------------------
00001552                           556  * Subroutine    : Draw Environment
00001552                           557  * Description   : Draw Environment (ground and sky colours)
00001552                           558  *-----------------------------------------------------------
00001552                           559  DRAW_ENVIRONMENT:
00001552  2239 00001E48            560      MOVE.L GROUND_COLOUR, D1
00001558  103C 0050                561      MOVE.B #80, D0
0000155C  4E4F                     562      TRAP #15
0000155E  103C 0051                563      MOVE.B #81, D0
00001562  4E4F                     564      TRAP #15
00001564                           565      
00001564  103C 0057                566      MOVE.B #87, D0
00001568  7200                     567      MOVE.L #0, D1
0000156A  243C 000000F0            568      MOVE.L #240, D2
00001570  0682 00000008            569      ADD.L #PLYR_H_INIT, D2
00001576  263C 00000280            570      MOVE.L #640, D3
0000157C  283C 000001E0            571      MOVE.L #480, D4
00001582  4E4F                     572      TRAP #15
00001584                           573      
00001584  2239 00001E4C            574      MOVE.L SKY_COLOUR, D1
0000158A  103C 0050                575      MOVE.B #80, D0
0000158E  4E4F                     576      TRAP #15
00001590  103C 0051                577      MOVE.B #81, D0
00001594  4E4F                     578      TRAP #15
00001596                           579      
00001596  103C 0057                580      MOVE.B #87, D0
0000159A  7200                     581      MOVE.L #0, D1
0000159C  7400                     582      MOVE.L #0, D2
0000159E  263C 00000280            583      MOVE.L #640, D3
000015A4  283C 000000F0            584      MOVE.L #240, D4
000015AA  0684 00000008            585      ADD.L #PLYR_H_INIT, D4
000015B0  4E4F                     586      TRAP #15
000015B2  4E75                     587      RTS
000015B4                           588  *-----------------------------------------------------------
000015B4                           589  * Subroutine    : Collision Check
000015B4                           590  * Description   : Axis-Aligned Bounding Box Collision Detection
000015B4                           591  * Algorithm checks for overlap on the 4 sides of the Player and 
000015B4                           592  * NO POSSIBLE COLLISION IF:
000015B4                           593  * Player left >= enemy right OR
000015B4                           594  * Player right <= enemy left OR
000015B4                           595  * Player top >= enemy bottom OR
000015B4                           596  * Player bottom <= enemy top
000015B4                           597  *-----------------------------------------------------------
000015B4                           598  CHECK_COLLISIONS:
000015B4  4281                     599      CLR.L   D1                      ; Clear D1
000015B6  4282                     600      CLR.L   D2                      ; Clear D2
000015B8  0C39 0000 00001E79       601      CMP.B #0, COLLISION_COOLDOWN
000015C0  6E00 007C                602      BGT REDUCE_COOLDOWN ; if cooldown > 0 don't check for collisions
000015C4                           603      
000015C4                           604      ; check collisions
000015C4  2239 00001E58            605      MOVE.L PLAYER_X, D1 ; player x to d1
000015CA  2439 00001E70            606      MOVE.L ENEMY_X, D2  ; enemy x to d2
000015D0  D4B9 00001C22            607      ADD.L ENEMY_W, D2  ; add enemy width to d2
000015D6  B282                     608      CMP.L D2, D1          
000015D8  6C00 006A                609      BGE COLLISION_CHECK_DONE ; if player left >= enemy right no possible collision
000015DC                           610  
000015DC  0681 00000008            611      ADD.L #PLYR_W_INIT, D1  ; add player width to d1
000015E2  2439 00001E70            612      MOVE.L ENEMY_X, D2      ; enemy x to d2
000015E8  B282                     613      CMP.L D2, D1
000015EA  6F00 0058                614      BLE COLLISION_CHECK_DONE ; if player right <= enemy left no possible collision
000015EE                           615  
000015EE  2239 00001E5C            616      MOVE.L PLAYER_Y, D1 ; player y to d1
000015F4  2439 00001E74            617      MOVE.L ENEMY_Y, D2  ; enemy y to d2
000015FA  D4B9 00001C26            618      ADD.L ENEMY_H, D2  ; add enemy height to d2
00001600  B282                     619      CMP.L D2, D1
00001602  6C00 0040                620      BGE COLLISION_CHECK_DONE ; if player top >= enemy bottom no possible collision
00001606                           621  
00001606  0681 00000008            622      ADD.L #PLYR_H_INIT, D1 ; add player height to d1
0000160C  2439 00001E74            623      MOVE.L ENEMY_Y, D2 ; enemy y to d2
00001612  B282                     624      CMP.L D2, D1 
00001614  6F00 002E                625      BLE COLLISION_CHECK_DONE ; if player bottom <= enemy top no possible collision
00001618                           626  
00001618                           627      ; if collision run code
00001618  6100 FEB8                628      BSR     PLAY_OPPS               ; Play Opps Wav
0000161C  2039 00001C22            629      MOVE.L ENEMY_W, D0      ; Load ENEMY_W into D0
00001622  E300                     630      ASL.B  #1, D0           ; Multiply by 2 (Shift Left)
00001624  13C0 00001E79            631      MOVE.B D0, COLLISION_COOLDOWN  ; add 2* enemy to collision cooldown to prevent multiple lives from being subtracted
0000162A  5339 00001C2A            632      SUB.B #1, LIVES
00001630  0C39 0000 00001C2A       633      CMP.B #0, LIVES
00001638  6F00 05C2                634      BLE EXIT
0000163C  4E75                     635      RTS   
0000163E                           636  
0000163E                           637  REDUCE_COOLDOWN:
0000163E  5339 00001E79            638      SUB.B #1, COLLISION_COOLDOWN
00001644                           639  
00001644                           640  COLLISION_CHECK_DONE:               ; No Collision Update points
00001644  223C 00000001            641      MOVE.L   #POINTS,    D1          ; Move upgrade to D1
0000164A  D2B9 00001E60            642      ADD.L   PLAYER_SCORE,D1         ; Add to current player score
00001650  23C1 00001E60            643      MOVE.L  D1, PLAYER_SCORE        ; Update player score in memory
00001656  4E75                     644      RTS                             ; Return to subroutine
00001658                           645  *-----------------------------------------------------------
00001658                           646  * Subroutine    : ADD_DELAY
00001658                           647  * Description   : Add a delay to the game rendering to slow down the game physics
00001658                           648  *-----------------------------------------------------------
00001658                           649  ADD_DELAY:
00001658  2C39 00001C2C            650      MOVE.L DELAY, D6
0000165E                           651  DELAY_LOOP:
0000165E  5386                     652      SUB.L #1, D6
00001660  BCBC 00000000            653      CMP.L #0, D6
00001666  6EF6                     654      BGT DELAY_LOOP
00001668  6F00 0002                655      BLE END_LOOP
0000166C                           656      
0000166C                           657  END_LOOP:
0000166C  53B9 00001C34            658      SUB.L #1, CYCLES_TO_NEXT_INCREASE
00001672  2C39 00001C34            659      MOVE.L CYCLES_TO_NEXT_INCREASE, D6
00001678  BCBC 00000000            660      CMP.L #0, D6
0000167E  6F00 0004                661      BLE REDUCE_DELAY
00001682  4E75                     662      RTS
00001684                           663      
00001684                           664  REDUCE_DELAY:
00001684  2C39 00001C2C            665      MOVE.L DELAY, D6
0000168A  2A39 00001C38            666      MOVE.L MINIMUM_DELAY, D5
00001690  BC85                     667      CMP.L D5, D6
00001692  6F00 0008                668      BLE SKIP_REDUCE
00001696  53B9 00001C2C            669      SUB.L #1, DELAY
0000169C                           670      
0000169C                           671  SKIP_REDUCE:
0000169C  2C39 00001C30            672      MOVE.L NEXT_INCREASE_CYCLES, D6
000016A2  DDB9 00001C34            673      ADD.L D6, CYCLES_TO_NEXT_INCREASE
000016A8  4E75                     674      RTS
000016AA                           675  *-----------------------------------------------------------
000016AA                           676  * Subroutine    : MAIN_MENU
000016AA                           677  * Description   : Render the main menu and difficulty choice
000016AA                           678  *-----------------------------------------------------------
000016AA                           679  MAIN_MENU: 
000016AA  4281                     680      CLR.L   D1                      ; Clear contents of D1 (XOR is faster)
000016AC                           681      ; Clear the screen (see easy 68k help)
000016AC  103C 000B                682      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
000016B0  323C FF00                683      MOVE.W  #$FF00,     D1          ; Fill Screen Clear
000016B4  4E4F                     684      TRAP    #15                     ; Trap (Perform action)
000016B6                           685      
000016B6                           686      ; Message
000016B6  103C 000B                687      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
000016BA  323C 1E02                688      MOVE.W  #$1E02,     D1          
000016BE  4E4F                     689      TRAP    #15                     ; Trap (Perform action)
000016C0  43F9 00001C91            690      LEA     CHOOSE_LEVEL_MSG,  A1   ; Message
000016C6  303C 000D                691      MOVE    #13,        D0          ; No Line feed
000016CA  4E4F                     692      TRAP    #15                     ; Trap (Perform action)
000016CC                           693  
000016CC                           694      ; DRAW EASY BOX
000016CC                           695      ; Set Pixel Colors
000016CC  223C 0000FF00            696      MOVE.L  #GREEN,     D1          ; Set Background color
000016D2  103C 0050                697      MOVE.B  #80,        D0          ; Task for Background Color
000016D6  4E4F                     698      TRAP    #15                     ; Trap (Perform action)
000016D8  7232                     699      MOVE.L  #50, D1 ; X
000016DA  243C 00000096            700      MOVE.L  #150, D2 ; Y
000016E0  2601                     701      MOVE.L D1, D3
000016E2  2802                     702      MOVE.L D2, D4
000016E4  0683 00000096            703      ADD.L #BOX_SIZE, D3 ; Width
000016EA  0684 00000096            704      ADD.L #BOX_SIZE, D4 ; Height
000016F0  103C 0057                705      MOVE.B  #87,        D0          ; Draw box
000016F4  4E4F                     706      TRAP    #15                     ; Trap (Perform action)
000016F6                           707      
000016F6                           708      ; DRAW MEDIUM BOX
000016F6                           709      ; Set Pixel Colors
000016F6  223C 0000A5FF            710      MOVE.L  #ORANGE,     D1          ; Set Background color
000016FC  103C 0050                711      MOVE.B  #80,        D0          ; Task for Background Color
00001700  4E4F                     712      TRAP    #15                     ; Trap (Perform action)
00001702  223C 000000F5            713      MOVE.L  #245, D1 ; X
00001708  243C 00000096            714      MOVE.L  #150, D2 ; Y
0000170E  2601                     715      MOVE.L D1, D3
00001710  2802                     716      MOVE.L D2, D4
00001712  0683 00000096            717      ADD.L #BOX_SIZE, D3 ; Width
00001718  0684 00000096            718      ADD.L #BOX_SIZE, D4 ; Height
0000171E  103C 0057                719      MOVE.B  #87,        D0          ; Draw box
00001722  4E4F                     720      TRAP    #15                     ; Trap (Perform action)
00001724                           721      
00001724                           722      ; DRAW HARD BOX
00001724                           723      ; Set Pixel Colors
00001724  223C 000000FF            724      MOVE.L  #RED,     D1          ; Set Background color
0000172A  103C 0050                725      MOVE.B  #80,        D0          ; Task for Background Color
0000172E  4E4F                     726      TRAP    #15                     ; Trap (Perform action)
00001730  223C 000001B8            727      MOVE.L  #440, D1 ; X
00001736  243C 00000096            728      MOVE.L  #150, D2 ; Y
0000173C  2601                     729      MOVE.L D1, D3
0000173E  2802                     730      MOVE.L D2, D4
00001740  0683 00000096            731      ADD.L #BOX_SIZE, D3 ; Width
00001746  0684 00000096            732      ADD.L #BOX_SIZE, D4 ; Height
0000174C  103C 0057                733      MOVE.B  #87,        D0          ; Draw box
00001750  4E4F                     734      TRAP    #15                     ; Trap (Perform action)
00001752                           735      
00001752                           736      ; Message
00001752  103C 000B                737      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00001756  323C 0D09                738      MOVE.W  #$0D09,     D1          
0000175A  4E4F                     739      TRAP    #15                     ; Trap (Perform action)
0000175C  43F9 00001CA6            740      LEA     EASY_MSG1,  A1   ; Message
00001762  303C 000D                741      MOVE    #13,        D0          ; No Line feed
00001766  4E4F                     742      TRAP    #15                     ; Trap (Perform action)
00001768                           743  
00001768                           744      ; Message
00001768  103C 000B                745      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
0000176C  323C 090D                746      MOVE.W  #$090D,     D1          
00001770  4E4F                     747      TRAP    #15                     ; Trap (Perform action)
00001772  43F9 00001CAD            748      LEA     EASY_MSG2,  A1   ; Message
00001778  303C 000D                749      MOVE    #13,        D0          ; No Line feed
0000177C  4E4F                     750      TRAP    #15                     ; Trap (Perform action)
0000177E                           751      
0000177E                           752      ; Message
0000177E  103C 000B                753      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00001782  323C 080E                754      MOVE.W  #$080E,     D1          
00001786  4E4F                     755      TRAP    #15                     ; Trap (Perform action)
00001788  43F9 00001CBB            756      LEA     EASY_MSG3,  A1   ; Message
0000178E  303C 000D                757      MOVE    #13,        D0          ; No Line feed
00001792  4E4F                     758      TRAP    #15                     ; Trap (Perform action)
00001794                           759      
00001794                           760      ; Message
00001794  103C 000B                761      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00001798  323C 0A0F                762      MOVE.W  #$0A0F,     D1          
0000179C  4E4F                     763      TRAP    #15                     ; Trap (Perform action)
0000179E  43F9 00001CCB            764      LEA     EASY_MSG4,  A1   ; Message
000017A4  303C 000D                765      MOVE    #13,        D0          ; No Line feed
000017A8  4E4F                     766      TRAP    #15                     ; Trap (Perform action)
000017AA                           767      
000017AA                           768      ; Message
000017AA  103C 000B                769      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
000017AE  323C 2409                770      MOVE.W  #$2409,     D1          
000017B2  4E4F                     771      TRAP    #15                     ; Trap (Perform action)
000017B4  43F9 00001CD6            772      LEA     MEDIUM_MSG1,  A1   ; Message
000017BA  303C 000D                773      MOVE    #13,        D0          ; No Line feed
000017BE  4E4F                     774      TRAP    #15                     ; Trap (Perform action)
000017C0                           775      
000017C0                           776      ; Message
000017C0  103C 000B                777      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
000017C4  323C 220D                778      MOVE.W  #$220D,     D1          
000017C8  4E4F                     779      TRAP    #15                     ; Trap (Perform action)
000017CA  43F9 00001CDF            780      LEA     MEDIUM_MSG2,  A1   ; Message
000017D0  303C 000D                781      MOVE    #13,        D0          ; No Line feed
000017D4  4E4F                     782      TRAP    #15                     ; Trap (Perform action)
000017D6                           783      
000017D6                           784      ; Message
000017D6  103C 000B                785      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
000017DA  323C 210E                786      MOVE.W  #$210E,     D1          
000017DE  4E4F                     787      TRAP    #15                     ; Trap (Perform action)
000017E0  43F9 00001CEC            788      LEA     MEDIUM_MSG3,  A1   ; Message
000017E6  303C 000D                789      MOVE    #13,        D0          ; No Line feed
000017EA  4E4F                     790      TRAP    #15                     ; Trap (Perform action)
000017EC                           791      
000017EC                           792      ; Message
000017EC  103C 000B                793      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
000017F0  323C 210F                794      MOVE.W  #$210F,     D1          
000017F4  4E4F                     795      TRAP    #15                     ; Trap (Perform action)
000017F6  43F9 00001CFB            796      LEA     MEDIUM_MSG4,  A1   ; Message
000017FC  303C 000D                797      MOVE    #13,        D0          ; No Line feed
00001800  4E4F                     798      TRAP    #15                     ; Trap (Perform action)
00001802                           799      
00001802                           800      ; Message
00001802  103C 000B                801      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00001806  323C 3D09                802      MOVE.W  #$3D09,     D1          
0000180A  4E4F                     803      TRAP    #15                     ; Trap (Perform action)
0000180C  43F9 00001D0A            804      LEA     HARD_MSG1,  A1   ; Message
00001812  303C 000D                805      MOVE    #13,        D0          ; No Line feed
00001816  4E4F                     806      TRAP    #15                     ; Trap (Perform action)
00001818                           807      
00001818                           808      ; Message
00001818  103C 000B                809      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
0000181C  323C 3A0D                810      MOVE.W  #$3A0D,     D1          
00001820  4E4F                     811      TRAP    #15                     ; Trap (Perform action)
00001822  43F9 00001D11            812      LEA     HARD_MSG2,  A1   ; Message
00001828  303C 000D                813      MOVE    #13,        D0          ; No Line feed
0000182C  4E4F                     814      TRAP    #15                     ; Trap (Perform action)
0000182E                           815      
0000182E                           816      ; Message
0000182E  103C 000B                817      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00001832  323C 390E                818      MOVE.W  #$390E,     D1          
00001836  4E4F                     819      TRAP    #15                     ; Trap (Perform action)
00001838  43F9 00001D1E            820      LEA     HARD_MSG3,  A1   ; Message
0000183E  303C 000D                821      MOVE    #13,        D0          ; No Line feed
00001842  4E4F                     822      TRAP    #15                     ; Trap (Perform action)
00001844                           823      
00001844                           824      ; Message
00001844  103C 000B                825      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00001848  323C 3B0F                826      MOVE.W  #$3B0F,     D1          
0000184C  4E4F                     827      TRAP    #15                     ; Trap (Perform action)
0000184E  43F9 00001D2D            828      LEA     HARD_MSG4,  A1   ; Message
00001854  303C 000D                829      MOVE    #13,        D0          ; No Line feed
00001858  4E4F                     830      TRAP    #15                     ; Trap (Perform action)
0000185A                           831  
0000185A                           832      ; Message
0000185A  103C 000B                833      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
0000185E  323C 1C1F                834      MOVE.W  #$1C1F,     D1          
00001862  4E4F                     835      TRAP    #15                     ; Trap (Perform action)
00001864  43F9 00001D38            836      LEA     ENTER_DIFFICULTY_MSG,  A1   ; Message
0000186A  303C 000D                837      MOVE    #13,        D0          ; No Line feed
0000186E  4E4F                     838      TRAP    #15                     ; Trap (Perform action)
00001870                           839      
00001870                           840      ; Enable back buffer (draw)
00001870  103C 005E                841      MOVE.B  #94,        D0
00001874  4E4F                     842      TRAP    #15
00001876                           843      
00001876  103C 000B                844      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
0000187A  323C 331E                845      MOVE.W  #$331E,     D1          
0000187E  4E4F                     846      TRAP    #15                     ; Trap (Perform action)
00001880                           847      ; READ INPUT
00001880  4281                     848      CLR.L D1
00001882  7004                     849      MOVE.L #4, D0
00001884  4E4F                     850      TRAP #15
00001886                           851      
00001886  B2BC 00000001            852      CMP.L #1, D1
0000188C  6700 001A                853      BEQ SETUP_EASY
00001890  B2BC 00000002            854      CMP.L #2, D1
00001896  6700 006A                855      BEQ SETUP_MEDIUM
0000189A  B2BC 00000003            856      CMP.L #3, D1
000018A0  6700 00BA                857      BEQ SETUP_HARD
000018A4  6000 FE04                858      BRA MAIN_MENU
000018A8                           859  *-----------------------------------------------------------
000018A8                           860  * Subroutine    : SETUP_EASY
000018A8                           861  * Description   : Setup easy mode
000018A8                           862  *-----------------------------------------------------------
000018A8                           863  SETUP_EASY:
000018A8  23FC 000003FF 00001C2C   864      MOVE.L #$3FF, DELAY
000018B2  23FC 00000040 00001C34   865      MOVE.L #$40, CYCLES_TO_NEXT_INCREASE
000018BC  23FC 00000040 00001C30   866      MOVE.L #$40, NEXT_INCREASE_CYCLES
000018C6  23FC 0000017F 00001C38   867      MOVE.L #$17F, MINIMUM_DELAY
000018D0  23FC 0000FF00 00001E44   868      MOVE.L #GREEN, ENEMY_COLOUR
000018DA  13FC 000A 00001C2A       869      MOVE.B #10, LIVES
000018E2  13FC 0001 00001C2B       870      MOVE.B #1, DIFFICULTY
000018EA  23FC 00000008 00001C22   871      MOVE.L #8, ENEMY_W
000018F4  23FC 00000008 00001C26   872      MOVE.L #8, ENEMY_H
000018FE  6000 00B6                873      BRA PLANET_MENU
00001902                           874  *-----------------------------------------------------------
00001902                           875  * Subroutine    : SETUP_MEDIUM
00001902                           876  * Description   : Setup medium mode
00001902                           877  *-----------------------------------------------------------
00001902                           878  SETUP_MEDIUM:
00001902  23FC 000002FF 00001C2C   879      MOVE.L #$2FF, DELAY
0000190C  23FC 00000025 00001C34   880      MOVE.L #$25, CYCLES_TO_NEXT_INCREASE
00001916  23FC 00000025 00001C30   881      MOVE.L #$25, NEXT_INCREASE_CYCLES
00001920  23FC 0000012F 00001C38   882      MOVE.L #$12F, MINIMUM_DELAY
0000192A  23FC 0000A5FF 00001E44   883      MOVE.L #ORANGE, ENEMY_COLOUR
00001934  13FC 0005 00001C2A       884      MOVE.B #5, LIVES
0000193C  13FC 0002 00001C2B       885      MOVE.B #2, DIFFICULTY
00001944  23FC 0000000C 00001C22   886      MOVE.L #12, ENEMY_W
0000194E  23FC 0000000C 00001C26   887      MOVE.L #12, ENEMY_H
00001958  6000 005C                888      BRA PLANET_MENU
0000195C                           889  *-----------------------------------------------------------
0000195C                           890  * Subroutine    : SETUP_HARD
0000195C                           891  * Description   : Setup hard mode
0000195C                           892  *-----------------------------------------------------------
0000195C                           893  SETUP_HARD:
0000195C  23FC 000001FF 00001C2C   894      MOVE.L #$1FF, DELAY
00001966  23FC 00000010 00001C34   895      MOVE.L #$10, CYCLES_TO_NEXT_INCREASE
00001970  23FC 00000010 00001C30   896      MOVE.L #$10, NEXT_INCREASE_CYCLES
0000197A  23FC 0000008F 00001C38   897      MOVE.L #$8F, MINIMUM_DELAY
00001984  23FC 000000FF 00001E44   898      MOVE.L #RED, ENEMY_COLOUR
0000198E  13FC 0003 00001C2A       899      MOVE.B #3, LIVES
00001996  13FC 0003 00001C2B       900      MOVE.B #3, DIFFICULTY
0000199E  23FC 00000010 00001C22   901      MOVE.L #16, ENEMY_W
000019A8  23FC 00000010 00001C26   902      MOVE.L #16, ENEMY_H
000019B2  6000 0002                903      BRA PLANET_MENU
000019B6                           904  *-----------------------------------------------------------
000019B6                           905  * Subroutine    : PLANET_MENU
000019B6                           906  * Description   : Render the planet menu and choose planet
000019B6                           907  *-----------------------------------------------------------
000019B6                           908  PLANET_MENU: 
000019B6  4281                     909      CLR.L   D1                      ; Clear contents of D1 (XOR is faster)
000019B8                           910      ; Clear the screen (see easy 68k help)
000019B8  103C 000B                911      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
000019BC  323C FF00                912      MOVE.W  #$FF00,     D1          ; Fill Screen Clear
000019C0  4E4F                     913      TRAP    #15                     ; Trap (Perform action)
000019C2                           914  
000019C2                           915      ; Message
000019C2  103C 000B                916      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
000019C6  323C 2002                917      MOVE.W  #$2002,     D1          
000019CA  4E4F                     918      TRAP    #15                     ; Trap (Perform action)
000019CC  43F9 00001D74            919      LEA     CHOOSE_PLANET_MSG,  A1   ; Message
000019D2  303C 000D                920      MOVE    #13,        D0          ; No Line feed
000019D6  4E4F                     921      TRAP    #15                     ; Trap (Perform action)
000019D8                           922  
000019D8                           923      ; DRAW EARTH BOX
000019D8                           924      ; Set Pixel Colors
000019D8  223C 00099900            925      MOVE.L  #GROUND_EARTH,     D1          ; Set Background color
000019DE  103C 0050                926      MOVE.B  #80,        D0          ; Task for Background Color
000019E2  4E4F                     927      TRAP    #15                     ; Trap (Perform action)
000019E4  7232                     928      MOVE.L  #50, D1 ; X
000019E6  243C 00000096            929      MOVE.L  #150, D2 ; Y
000019EC  2601                     930      MOVE.L D1, D3
000019EE  2802                     931      MOVE.L D2, D4
000019F0  0683 00000096            932      ADD.L #BOX_SIZE, D3 ; Width
000019F6  0684 00000096            933      ADD.L #BOX_SIZE, D4 ; Height
000019FC  103C 0057                934      MOVE.B  #87,        D0          ; Draw box
00001A00  4E4F                     935      TRAP    #15                     ; Trap (Perform action)
00001A02                           936      
00001A02                           937      ; DRAW MOON BOX
00001A02                           938      ; Set Pixel Colors
00001A02  223C 00AAAAAA            939      MOVE.L  #GROUND_MOON,     D1          ; Set Background color
00001A08  103C 0050                940      MOVE.B  #80,        D0          ; Task for Background Color
00001A0C  4E4F                     941      TRAP    #15                     ; Trap (Perform action)
00001A0E  223C 000000F5            942      MOVE.L  #245, D1 ; X
00001A14  243C 00000096            943      MOVE.L  #150, D2 ; Y
00001A1A  2601                     944      MOVE.L D1, D3
00001A1C  2802                     945      MOVE.L D2, D4
00001A1E  0683 00000096            946      ADD.L #BOX_SIZE, D3 ; Width
00001A24  0684 00000096            947      ADD.L #BOX_SIZE, D4 ; Height
00001A2A  103C 0057                948      MOVE.B  #87,        D0          ; Draw box
00001A2E  4E4F                     949      TRAP    #15                     ; Trap (Perform action)
00001A30                           950      
00001A30                           951      ; DRAW MARS BOX
00001A30                           952      ; Set Pixel Colors
00001A30  223C 001F59B4            953      MOVE.L  #GROUND_MARS,     D1          ; Set Background color
00001A36  103C 0050                954      MOVE.B  #80,        D0          ; Task for Background Color
00001A3A  4E4F                     955      TRAP    #15                     ; Trap (Perform action)
00001A3C  223C 000001B8            956      MOVE.L  #440, D1 ; X
00001A42  243C 00000096            957      MOVE.L  #150, D2 ; Y
00001A48  2601                     958      MOVE.L D1, D3
00001A4A  2802                     959      MOVE.L D2, D4
00001A4C  0683 00000096            960      ADD.L #BOX_SIZE, D3 ; Width
00001A52  0684 00000096            961      ADD.L #BOX_SIZE, D4 ; Height
00001A58  103C 0057                962      MOVE.B  #87,        D0          ; Draw box
00001A5C  4E4F                     963      TRAP    #15                     ; Trap (Perform action)
00001A5E                           964      
00001A5E                           965      ; Message
00001A5E  103C 000B                966      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00001A62  323C 0C09                967      MOVE.W  #$0C09,     D1          
00001A66  4E4F                     968      TRAP    #15                     ; Trap (Perform action)
00001A68  43F9 00001D85            969      LEA     EARTH_MSG1,  A1   ; Message
00001A6E  303C 000D                970      MOVE    #13,        D0          ; No Line feed
00001A72  4E4F                     971      TRAP    #15                     ; Trap (Perform action)
00001A74                           972  
00001A74                           973      ; Message
00001A74  103C 000B                974      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00001A78  323C 090D                975      MOVE.W  #$090D,     D1          
00001A7C  4E4F                     976      TRAP    #15                     ; Trap (Perform action)
00001A7E  43F9 00001D8D            977      LEA     EARTH_MSG2,  A1   ; Message
00001A84  303C 000D                978      MOVE    #13,        D0          ; No Line feed
00001A88  4E4F                     979      TRAP    #15                     ; Trap (Perform action)
00001A8A                           980      
00001A8A                           981      ; Message
00001A8A  103C 000B                982      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00001A8E  323C 0A0E                983      MOVE.W  #$0A0E,     D1          
00001A92  4E4F                     984      TRAP    #15                     ; Trap (Perform action)
00001A94  43F9 00001D9C            985      LEA     EARTH_MSG3,  A1   ; Message
00001A9A  303C 000D                986      MOVE    #13,        D0          ; No Line feed
00001A9E  4E4F                     987      TRAP    #15                     ; Trap (Perform action)
00001AA0                           988      
00001AA0                           989      ; Message
00001AA0  103C 000B                990      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00001AA4  323C 0B0F                991      MOVE.W  #$0B0F,     D1          
00001AA8  4E4F                     992      TRAP    #15                     ; Trap (Perform action)
00001AAA  43F9 00001DA9            993      LEA     EARTH_MSG4,  A1   ; Message
00001AB0  303C 000D                994      MOVE    #13,        D0          ; No Line feed
00001AB4  4E4F                     995      TRAP    #15                     ; Trap (Perform action)
00001AB6                           996      
00001AB6                           997      ; Message
00001AB6  103C 000B                998      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00001ABA  323C 2509                999      MOVE.W  #$2509,     D1          
00001ABE  4E4F                    1000      TRAP    #15                     ; Trap (Perform action)
00001AC0  43F9 00001DB3           1001      LEA     MOON_MSG1,  A1   ; Message
00001AC6  303C 000D               1002      MOVE    #13,        D0          ; No Line feed
00001ACA  4E4F                    1003      TRAP    #15                     ; Trap (Perform action)
00001ACC                          1004      
00001ACC                          1005      ; Message
00001ACC  103C 000B               1006      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00001AD0  323C 200D               1007      MOVE.W  #$200D,     D1          
00001AD4  4E4F                    1008      TRAP    #15                     ; Trap (Perform action)
00001AD6  43F9 00001DBA           1009      LEA     MOON_MSG2,  A1   ; Message
00001ADC  303C 000D               1010      MOVE    #13,        D0          ; No Line feed
00001AE0  4E4F                    1011      TRAP    #15                     ; Trap (Perform action)
00001AE2                          1012      
00001AE2                          1013      ; Message
00001AE2  103C 000B               1014      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00001AE6  323C 220E               1015      MOVE.W  #$220E,     D1          
00001AEA  4E4F                    1016      TRAP    #15                     ; Trap (Perform action)
00001AEC  43F9 00001DCB           1017      LEA     MOON_MSG3,  A1   ; Message
00001AF2  303C 000D               1018      MOVE    #13,        D0          ; No Line feed
00001AF6  4E4F                    1019      TRAP    #15                     ; Trap (Perform action)
00001AF8                          1020      
00001AF8                          1021      ; Message
00001AF8  103C 000B               1022      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00001AFC  323C 200F               1023      MOVE.W  #$200F,     D1          
00001B00  4E4F                    1024      TRAP    #15                     ; Trap (Perform action)
00001B02  43F9 00001DD7           1025      LEA     MOON_MSG4,  A1   ; Message
00001B08  303C 000D               1026      MOVE    #13,        D0          ; No Line feed
00001B0C  4E4F                    1027      TRAP    #15                     ; Trap (Perform action)
00001B0E                          1028      
00001B0E                          1029      ; Message
00001B0E  103C 000B               1030      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00001B12  323C 3D09               1031      MOVE.W  #$3D09,     D1          
00001B16  4E4F                    1032      TRAP    #15                     ; Trap (Perform action)
00001B18  43F9 00001DE8           1033      LEA     MARS_MSG1,  A1   ; Message
00001B1E  303C 000D               1034      MOVE    #13,        D0          ; No Line feed
00001B22  4E4F                    1035      TRAP    #15                     ; Trap (Perform action)
00001B24                          1036      
00001B24                          1037      ; Message
00001B24  103C 000B               1038      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00001B28  323C 390D               1039      MOVE.W  #$390D,     D1          
00001B2C  4E4F                    1040      TRAP    #15                     ; Trap (Perform action)
00001B2E  43F9 00001DEF           1041      LEA     MARS_MSG2,  A1   ; Message
00001B34  303C 000D               1042      MOVE    #13,        D0          ; No Line feed
00001B38  4E4F                    1043      TRAP    #15                     ; Trap (Perform action)
00001B3A                          1044      
00001B3A                          1045      ; Message
00001B3A  103C 000B               1046      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00001B3E  323C 390E               1047      MOVE.W  #$390E,     D1          
00001B42  4E4F                    1048      TRAP    #15                     ; Trap (Perform action)
00001B44  43F9 00001DFE           1049      LEA     MARS_MSG3,  A1   ; Message
00001B4A  303C 000D               1050      MOVE    #13,        D0          ; No Line feed
00001B4E  4E4F                    1051      TRAP    #15                     ; Trap (Perform action)
00001B50                          1052      
00001B50                          1053      ; Message
00001B50  103C 000B               1054      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00001B54  323C 3B0F               1055      MOVE.W  #$3B0F,     D1          
00001B58  4E4F                    1056      TRAP    #15                     ; Trap (Perform action)
00001B5A  43F9 00001E0D           1057      LEA     MARS_MSG4,  A1   ; Message
00001B60  303C 000D               1058      MOVE    #13,        D0          ; No Line feed
00001B64  4E4F                    1059      TRAP    #15                     ; Trap (Perform action)
00001B66                          1060  
00001B66                          1061      ; Message
00001B66  103C 000B               1062      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00001B6A  323C 1E1F               1063      MOVE.W  #$1E1F,     D1          
00001B6E  4E4F                    1064      TRAP    #15                     ; Trap (Perform action)
00001B70  43F9 00001E18           1065      LEA     ENTER_PLANET_MSG,  A1   ; Message
00001B76  303C 000D               1066      MOVE    #13,        D0          ; No Line feed
00001B7A  4E4F                    1067      TRAP    #15                     ; Trap (Perform action)
00001B7C                          1068      
00001B7C                          1069      ; Enable back buffer (draw)
00001B7C  103C 005E               1070      MOVE.B  #94,        D0
00001B80  4E4F                    1071      TRAP    #15
00001B82                          1072      
00001B82  103C 000B               1073      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00001B86  323C 321E               1074      MOVE.W  #$321E,     D1          
00001B8A  4E4F                    1075      TRAP    #15                     ; Trap (Perform action)
00001B8C                          1076      ; READ INPUT
00001B8C  4281                    1077      CLR.L D1
00001B8E  7004                    1078      MOVE.L #4, D0
00001B90  4E4F                    1079      TRAP #15
00001B92                          1080      
00001B92  B2BC 00000001           1081      CMP.L #1, D1
00001B98  6700 001A               1082      BEQ SETUP_EARTH
00001B9C  B2BC 00000002           1083      CMP.L #2, D1
00001BA2  6700 0028               1084      BEQ SETUP_MOON
00001BA6  B2BC 00000003           1085      CMP.L #3, D1
00001BAC  6700 0036               1086      BEQ SETUP_MARS
00001BB0  6000 FE04               1087      BRA PLANET_MENU
00001BB4                          1088  *-----------------------------------------------------------
00001BB4                          1089  * Subroutine    : SETUP_EARTH
00001BB4                          1090  * Description   : Setup earth world
00001BB4                          1091  *-----------------------------------------------------------
00001BB4                          1092  SETUP_EARTH:
00001BB4  23FC 00099900 00001E48  1093      MOVE.L #GROUND_EARTH, GROUND_COLOUR
00001BBE  23FC 00FFD21B 00001E4C  1094      MOVE.L #SKY_EARTH, SKY_COLOUR
00001BC8  6000 F4E6               1095      BRA GAME
00001BCC                          1096  *-----------------------------------------------------------
00001BCC                          1097  * Subroutine    : SETUP_MOON
00001BCC                          1098  * Description   : Setup moon world
00001BCC                          1099  *-----------------------------------------------------------
00001BCC                          1100  SETUP_MOON:
00001BCC  23FC 00AAAAAA 00001E48  1101      MOVE.L #GROUND_MOON, GROUND_COLOUR
00001BD6  23FC 00000000 00001E4C  1102      MOVE.L #SKY_MOON, SKY_COLOUR
00001BE0  6000 F4CE               1103      BRA GAME
00001BE4                          1104  *-----------------------------------------------------------
00001BE4                          1105  * Subroutine    : SETUP_MARS
00001BE4                          1106  * Description   : Setup mars world
00001BE4                          1107  *-----------------------------------------------------------
00001BE4                          1108  SETUP_MARS:
00001BE4  23FC 001F59B4 00001E48  1109      MOVE.L #GROUND_MARS, GROUND_COLOUR
00001BEE  23FC 008AD3FF 00001E4C  1110      MOVE.L #SKY_MARS, SKY_COLOUR
00001BF8  6000 F4B6               1111      BRA GAME
00001BFC                          1112  *-----------------------------------------------------------
00001BFC                          1113  * Subroutine    : EXIT
00001BFC                          1114  * Description   : Exit message and End Game
00001BFC                          1115  *-----------------------------------------------------------
00001BFC                          1116  EXIT:
00001BFC                          1117      ; Show if Exiting is Running
00001BFC  103C 000B               1118      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00001C00  323C 4004               1119      MOVE.W  #$4004,     D1          ; Col 40, Row 1
00001C04  4E4F                    1120      TRAP    #15                     ; Trap (Perform action)
00001C06  43F9 00001C85           1121      LEA     EXIT_MSG,   A1          ; Exit
00001C0C  303C 000D               1122      MOVE    #13,        D0          ; No Line feed
00001C10  4E4F                    1123      TRAP    #15                     ; Trap (Perform action)
00001C12                          1124      
00001C12                          1125      ; Enable back buffer (draw)
00001C12  103C 005E               1126      MOVE.B  #94,        D0
00001C16  4E4F                    1127      TRAP    #15
00001C18                          1128  
00001C18  103C 0009               1129      MOVE.B  #TC_EXIT,   D0          ; Exit Code
00001C1C  4E4F                    1130      TRAP    #15                     ; Trap (Perform action)
00001C1E  FFFF FFFF               1131      SIMHALT
00001C22                          1132  *-----------------------------------------------------------
00001C22                          1133  * Section       : Trap Codes
00001C22                          1134  * Description   : Trap Codes used throughout StarterKit
00001C22                          1135  *-----------------------------------------------------------
00001C22                          1136  * Trap CODES
00001C22  =00000021               1137  TC_SCREEN   EQU         33          ; Screen size information trap code
00001C22  =00000000               1138  TC_S_SIZE   EQU         00          ; Places 0 in D1.L to retrieve Screen width and height in D1.L
00001C22                          1139                                      ; First 16 bit Word is screen Width and Second 16 bits is screen Height
00001C22  =00000013               1140  TC_KEYCODE  EQU         19          ; Check for pressed keys
00001C22  =0000005C               1141  TC_DBL_BUF  EQU         92          ; Double Buffer Screen Trap Code
00001C22  =0000000B               1142  TC_CURSR_P  EQU         11          ; Trap code cursor position
00001C22                          1143  
00001C22  =00000009               1144  TC_EXIT     EQU         09          ; Exit Trapcode
00001C22                          1145  *-----------------------------------------------------------
00001C22                          1146  * Section       : Charater Setup
00001C22                          1147  * Description   : Size of Player and Enemy and properties
00001C22                          1148  * of these characters e.g Starting Positions and Sizes
00001C22                          1149  *-----------------------------------------------------------
00001C22  =00000008               1150  PLYR_W_INIT EQU         08          ; Players initial Width
00001C22  =00000008               1151  PLYR_H_INIT EQU         08          ; Players initial Height
00001C22                          1152  
00001C22  =00000000               1153  PLYR_DFLT_V EQU         00          ; Default Player Velocity
00001C22  =FFFFFFEC               1154  PLYR_JUMP_V EQU        -20          ; Player Jump Velocity
00001C22  =00000001               1155  PLYR_DFLT_G EQU         01          ; Player Default Gravity
00001C22                          1156  
00001C22  =00000001               1157  GND_TRUE    EQU         01          ; Player on Ground True
00001C22  =00000000               1158  GND_FALSE   EQU         00          ; Player on Ground False
00001C22                          1159  
00001C22  =00000000               1160  RUN_INDEX   EQU         00          ; Player Run Sound Index  
00001C22  =00000001               1161  JMP_INDEX   EQU         01          ; Player Jump Sound Index  
00001C22  =00000002               1162  OPPS_INDEX  EQU         02          ; Player Opps Sound Index
00001C22                          1163  
00001C22                          1164  ENEMY_W     DS.L         1          ; Enemy initial Width
00001C26                          1165  ENEMY_H     DS.L         1          ; Enemy initial Height
00001C2A                          1166  *-----------------------------------------------------------
00001C2A                          1167  * Section       : Game Stats
00001C2A                          1168  * Description   : Core game counters
00001C2A                          1169  *-----------------------------------------------------------
00001C2A  =00000001               1170  POINTS      EQU         01          ; Points added
00001C2A= 00                      1171  LIVES       DC.B        0           ; Amount of lives
00001C2B= 00                      1172  DIFFICULTY  DC.B        0           ; difficulty
00001C2C                          1173  *-----------------------------------------------------------
00001C2C                          1174  * Section       : Keyboard Keys
00001C2C                          1175  * Description   : Spacebar and Escape or two functioning keys
00001C2C                          1176  * Spacebar to JUMP and Escape to Exit Game
00001C2C                          1177  *-----------------------------------------------------------
00001C2C  =00000020               1178  SPACEBAR    EQU         $20         ; Spacebar ASCII Keycode
00001C2C  =0000001B               1179  ESCAPE      EQU         $1B         ; Escape ASCII Keycode
00001C2C  =00000072               1180  F3KEY       EQU         114         ; F3 key ASCII keycode
00001C2C                          1181  *-----------------------------------------------------------
00001C2C                          1182  * Section       : Delay variables
00001C2C                          1183  * Description   : Delay variables
00001C2C                          1184  *-----------------------------------------------------------
00001C2C= 000005FF                1185  DELAY                   DC.L $5FF   ; Amount of clock cycles for each delay cycles
00001C30= 0000001F                1186  NEXT_INCREASE_CYCLES    DC.L $1F    ; Amount of delay cycles to wait before reducing the delay
00001C34= 0000001F                1187  CYCLES_TO_NEXT_INCREASE DC.L $1F    ; Counter of delay cycles
00001C38= 00000001                1188  MINIMUM_DELAY           DC.L $1     ; Minimum amount of cycles for the delay, prevents game from going too fast
00001C3C                          1189  *-----------------------------------------------------------
00001C3C                          1190  * Section       : Messages
00001C3C                          1191  * Description   : Messages to Print on Console, names should be self documenting
00001C3C                          1192  *-----------------------------------------------------------
00001C3C= 53 63 6F 72 65 3A ...   1193  SCORE_MSG       DC.B    'Score: ', 0       ; Score Message
00001C44= 4B 65 79 43 6F 64 ...   1194  KEYCODE_MSG     DC.B    'KeyCode: ', 0     ; Keycode Message
00001C4E= 4A 75 6D 70 2E 2E ...   1195  JUMP_MSG        DC.B    'Jump....', 0       ; Jump Message
00001C57                          1196  
00001C57= 49 64 6C 65 2E 2E ...   1197  IDLE_MSG        DC.B    'Idle....', 0       ; Idle Message
00001C60= 55 70 64 61 74 65 ...   1198  UPDATE_MSG      DC.B    'Update....', 0     ; Update Message
00001C6B= 44 72 61 77 2E 2E ...   1199  DRAW_MSG        DC.B    'Draw....', 0       ; Draw Message
00001C74                          1200  
00001C74= 58 3A 00                1201  X_MSG           DC.B    'X:', 0             ; X Position Message
00001C77= 59 3A 00                1202  Y_MSG           DC.B    'Y:', 0             ; Y Position Message
00001C7A= 56 3A 00                1203  V_MSG           DC.B    'V:', 0             ; Velocity Position Message
00001C7D= 47 3A 00                1204  G_MSG           DC.B    'G:', 0             ; Gravity Position Message
00001C80= 47 4E 44 3A 00          1205  GND_MSG         DC.B    'GND:', 0           ; On Ground Position Message
00001C85                          1206  
00001C85= 45 78 69 74 69 6E ...   1207  EXIT_MSG        DC.B    'Exiting....', 0    ; Exit Message
00001C91                          1208  
00001C91= 43 48 4F 4F 53 45 ...   1209  CHOOSE_LEVEL_MSG DC.B 'CHOOSE A DIFFICULTY:', 0 
00001CA6= 31 2D 45 41 53 59 00    1210  EASY_MSG1 DC.B '1-EASY', 0 
00001CAD= 4C 65 73 73 2C 20 ...   1211  EASY_MSG2 DC.B 'Less, slower,', 0 
00001CBB= 53 6D 61 6C 6C 65 ...   1212  EASY_MSG3 DC.B 'Smaller enemies', 0 
00001CCB= 4D 6F 72 65 20 6C ...   1213  EASY_MSG4 DC.B 'More lives', 0 
00001CD6= 32 2D 4D 45 44 49 ...   1214  MEDIUM_MSG1 DC.B '2-MEDIUM', 0 
00001CDF= 4D 65 64 69 75 6D ...   1215  MEDIUM_MSG2 DC.B 'Medium speed', 0 
00001CEC= 4E 6F 72 6D 61 6C ...   1216  MEDIUM_MSG3 DC.B 'Normal enemies', 0
00001CFB= 53 74 61 6E 64 61 ...   1217  MEDIUM_MSG4 DC.B 'Standard lives', 0 
00001D0A= 33 2D 48 41 52 44 00    1218  HARD_MSG1 DC.B '3-HARD', 0 
00001D11= 4D 6F 72 65 2C 20 ...   1219  HARD_MSG2 DC.B 'More, bigger', 0 
00001D1E= 46 61 73 74 65 72 ...   1220  HARD_MSG3 DC.B 'Faster enemies', 0 
00001D2D= 4C 65 73 73 20 6C ...   1221  HARD_MSG4 DC.B 'Less lives', 0 
00001D38= 45 6E 74 65 72 20 ...   1222  ENTER_DIFFICULTY_MSG DC.B 'Enter difficulty (1-3):', 0
00001D50= 44 69 66 66 69 63 ...   1223  DIFFICULTY_MSG DC.B 'Difficulty:',0
00001D5C= 65 61 73 79 00          1224  DIFFICULTY_MSG_EASY DC.B 'easy',0
00001D61= 6D 65 64 69 75 6D 00    1225  DIFFICULTY_MSG_NORMAL DC.B 'medium',0
00001D68= 68 61 72 64 00          1226  DIFFICULTY_MSG_HARD DC.B 'hard',0
00001D6D= 4C 69 76 65 73 3A 00    1227  LIVES_MSG DC.B 'Lives:',0
00001D74= 43 48 4F 4F 53 45 ...   1228  CHOOSE_PLANET_MSG DC.B 'CHOOSE A PLANET:', 0 
00001D85= 31 2D 45 41 52 54 ...   1229  EARTH_MSG1 DC.B '1-EARTH', 0 
00001D8D= 46 61 6D 69 6C 69 ...   1230  EARTH_MSG2 DC.B 'Familiar world', 0 
00001D9C= 48 69 67 68 20 67 ...   1231  EARTH_MSG3 DC.B 'High gravity', 0 
00001DA9= 4C 6F 77 20 6A 75 ...   1232  EARTH_MSG4 DC.B 'Low jumps', 0 
00001DB3= 32 2D 4D 4F 4F 4E 00    1233  MOON_MSG1 DC.B '2-MOON', 0 
00001DBA= 45 61 72 74 68 73 ...   1234  MOON_MSG2 DC.B 'Earths neighbour', 0 
00001DCB= 4C 6F 77 20 67 72 ...   1235  MOON_MSG3 DC.B 'Low gravity', 0
00001DD7= 53 75 70 65 72 20 ...   1236  MOON_MSG4 DC.B 'Super high jumps', 0 
00001DE8= 33 2D 4D 41 52 53 00    1237  MARS_MSG1 DC.B '3-MARS', 0 
00001DEF= 54 68 65 20 72 65 ...   1238  MARS_MSG2 DC.B 'The red planet', 0 
00001DFE= 4D 65 64 69 75 6D ...   1239  MARS_MSG3 DC.B 'Medium gravity', 0 
00001E0D= 48 69 67 68 20 6A ...   1240  MARS_MSG4 DC.B 'High jumps', 0 
00001E18= 45 6E 74 65 72 20 ...   1241  ENTER_PLANET_MSG DC.B 'Enter planet (1-3):', 0
00001E2C= 50 6C 61 6E 65 74 ...   1242  PLANT_MSG DC.B 'Planet:',0
00001E34= 65 61 72 74 68 00       1243  PLANT_MSG_EARTH DC.B 'earth',0
00001E3A= 6D 6F 6F 6E 00          1244  PLANT_MSG_MOON DC.B 'moon',0
00001E3F= 6D 61 72 73 00          1245  PLANT_MSG_MARS DC.B 'mars',0
00001E44                          1246  *-----------------------------------------------------------
00001E44                          1247  * Section       : Graphic Colors
00001E44                          1248  * Description   : Colours constants
00001E44                          1249  *-----------------------------------------------------------
00001E44  =00FFFFFF               1250  WHITE           EQU     $00FFFFFF
00001E44  =000000FF               1251  RED             EQU     $000000FF
00001E44  =0000A5FF               1252  ORANGE          EQU     $0000A5FF
00001E44  =0000FF00               1253  GREEN           EQU     $0000FF00
00001E44  =00099900               1254  GROUND_EARTH    EQU     $00099900
00001E44  =00FFD21B               1255  SKY_EARTH       EQU     $00FFD21B
00001E44  =00AAAAAA               1256  GROUND_MOON     EQU     $00AAAAAA
00001E44  =00000000               1257  SKY_MOON        EQU     $00000000
00001E44  =001F59B4               1258  GROUND_MARS     EQU     $001F59B4
00001E44  =008AD3FF               1259  SKY_MARS        EQU     $008AD3FF
00001E44                          1260  ; reserve space for colours
00001E44                          1261  ENEMY_COLOUR    DS.L    1
00001E48                          1262  GROUND_COLOUR   DS.L    1
00001E4C                          1263  SKY_COLOUR      DS.L    1
00001E50                          1264  *-----------------------------------------------------------
00001E50                          1265  * Section       : Screen Size
00001E50                          1266  * Description   : Screen Width and Height (640*480)
00001E50                          1267  *-----------------------------------------------------------
00001E50                          1268  SCREEN_W        DS.W    01  ; Reserve Space for Screen Width
00001E52                          1269  SCREEN_H        DS.W    01  ; Reserve Space for Screen Height
00001E54                          1270  *-----------------------------------------------------------
00001E54                          1271  * Section       : Keyboard Input
00001E54                          1272  * Description   : Used for storing Keypresses
00001E54                          1273  *-----------------------------------------------------------
00001E54                          1274  CURRENT_KEY     DS.L    01  ; Reserve Space for Current Key Pressed
00001E58                          1275  *-----------------------------------------------------------
00001E58                          1276  * Section       : Character Positions
00001E58                          1277  * Description   : Player and Enemy Position Memory Locations
00001E58                          1278  *-----------------------------------------------------------
00001E58                          1279  PLAYER_X        DS.L    01  ; Reserve Space for Player X Position
00001E5C                          1280  PLAYER_Y        DS.L    01  ; Reserve Space for Player Y Position
00001E60                          1281  PLAYER_SCORE    DS.L    01  ; Reserve Space for Player Score
00001E64                          1282  
00001E64                          1283  PLYR_VELOCITY   DS.L    01  ; Reserve Space for Player Velocity
00001E68                          1284  PLYR_GRAVITY    DS.L    01  ; Reserve Space for Player Gravity
00001E6C                          1285  PLYR_ON_GND     DS.L    01  ; Reserve Space for Player on Ground
00001E70                          1286  
00001E70                          1287  ENEMY_X         DS.L    01  ; Reserve Space for Enemy X Position
00001E74                          1288  ENEMY_Y         DS.L    01  ; Reserve Space for Enemy Y Position
00001E78                          1289  *-----------------------------------------------------------
00001E78                          1290  * Section       : Other variables and constants
00001E78                          1291  *-----------------------------------------------------------
00001E78  =00000096               1292  BOX_SIZE           EQU  150 ; Box size constant
00001E78= 00                      1293  SHOW_ADVANCED_INFO DC.B 0   ; 0 = false, 1 = true
00001E79                          1294  COLLISION_COOLDOWN DS.B 1   ; amount of frames to skip collision checking after a collison occurred, prevents multiple lives from being taken away on 1 hit
00001E7A= 01                      1295  JUMP_SKIP_FRAMES   DC.B 1   ; slow down jump
00001E7B                          1296  *-----------------------------------------------------------
00001E7B                          1297  * Section       : Sounds
00001E7B                          1298  * Description   : Sound files, which are then loaded and given
00001E7B                          1299  * an address in memory, they take a longtime to process and play
00001E7B                          1300  * so keep the files small. Used https://voicemaker.in/ to 
00001E7B                          1301  * generate and Audacity to convert MP3 to WAV
00001E7B                          1302  *-----------------------------------------------------------
00001E7B= 6A 75 6D 70 2E 77 ...   1303  JUMP_WAV        DC.B    'jump.wav',0        ; Jump Sound
00001E84= 72 75 6E 2E 77 61 ...   1304  RUN_WAV         DC.B    'run.wav',0         ; Run Sound
00001E8C= 6F 70 70 73 2E 77 ...   1305  OPPS_WAV        DC.B    'opps.wav',0        ; Collision Opps
00001E95                          1306      END    START        ; last line of source

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ADD_DELAY           1658
BOX_SIZE            96
CHECK_COLLISIONS    15B4
CHOOSE_LEVEL_MSG    1C91
CHOOSE_PLANET_MSG   1D74
COLLISION_CHECK_DONE  1644
COLLISION_COOLDOWN  1E79
CONTINUE_DRAWING    124E
CURRENT_KEY         1E54
CYCLES_TO_NEXT_INCREASE  1C34
DELAY               1C2C
DELAY_LOOP          165E
DIFFICULTY          1C2B
DIFFICULTY_MSG      1D50
DIFFICULTY_MSG_EASY  1D5C
DIFFICULTY_MSG_HARD  1D68
DIFFICULTY_MSG_NORMAL  1D61
DRAW                11DC
DRAW_ENEMY          151C
DRAW_ENVIRONMENT    1552
DRAW_MSG            1C6B
DRAW_PLAYER         14DE
DRAW_PLYR_DATA      11FE
EARTH_MSG1          1D85
EARTH_MSG2          1D8D
EARTH_MSG3          1D9C
EARTH_MSG4          1DA9
EASY_MSG1           1CA6
EASY_MSG2           1CAD
EASY_MSG3           1CBB
EASY_MSG4           1CCB
END_LOOP            166C
ENEMY_COLOUR        1E44
ENEMY_H             1C26
ENEMY_W             1C22
ENEMY_X             1E70
ENEMY_Y             1E74
ENTER_DIFFICULTY_MSG  1D38
ENTER_PLANET_MSG    1E18
ESCAPE              1B
EXIT                1BFC
EXIT_MSG            1C85
F3KEY               72
GAME                10B0
GAMELOOP            10B4
GND_FALSE           0
GND_MSG             1C80
GND_TRUE            1
GREEN               FF00
GROUND_COLOUR       1E48
GROUND_EARTH        99900
GROUND_MARS         1F59B4
GROUND_MOON         AAAAAA
G_MSG               1C7D
HARD_MSG1           1D0A
HARD_MSG2           1D11
HARD_MSG3           1D1E
HARD_MSG4           1D2D
IDLE                147E
IDLE_MSG            1C57
INITIALISE          1000
INPUT               10CE
IS_PLAYER_ON_GND    1406
JMP_INDEX           1
JUMP                145A
JUMP_DONE           147C
JUMP_LOAD           14A2
JUMP_MSG            1C4E
JUMP_SKIP_FRAMES    1E7A
JUMP_WAV            1E7B
KEYCODE_MSG         1C44
LIVES               1C2A
LIVES_MSG           1D6D
MAIN_MENU           16AA
MARS_MSG1           1DE8
MARS_MSG2           1DEF
MARS_MSG3           1DFE
MARS_MSG4           1E0D
MEDIUM_MSG1         1CD6
MEDIUM_MSG2         1CDF
MEDIUM_MSG3         1CEC
MEDIUM_MSG4         1CFB
MINIMUM_DELAY       1C38
MOON_MSG1           1DB3
MOON_MSG2           1DBA
MOON_MSG3           1DCB
MOON_MSG4           1DD7
MOVE_ENEMY          1198
NEXT_INCREASE_CYCLES  1C30
OPPS_INDEX          2
OPPS_LOAD           14C0
OPPS_WAV            1E8C
ORANGE              A5FF
PERFORM_JUMP        146C
PLANET_MENU         19B6
PLANT_MSG           1E2C
PLANT_MSG_EARTH     1E34
PLANT_MSG_MARS      1E3F
PLANT_MSG_MOON      1E3A
PLAYER_SCORE        1E60
PLAYER_X            1E58
PLAYER_Y            1E5C
PLAY_JUMP           14B4
PLAY_OPPS           14D2
PLAY_RUN            1496
PLYR_DFLT_G         1
PLYR_DFLT_V         0
PLYR_GRAVITY        1E68
PLYR_H_INIT         8
PLYR_JUMP_V         FFFFFFEC
PLYR_ON_GND         1E6C
PLYR_VELOCITY       1E64
PLYR_W_INIT         8
POINTS              1
PROCESS_INPUT       10E8
RED                 FF
REDUCE_COOLDOWN     163E
REDUCE_DELAY        1684
RENDER_EASY         1234
RENDER_HARD         1248
RENDER_NORMAL       123E
RESET_ENEMY_POSITION  11A0
RUN_INDEX           0
RUN_LOAD            1484
RUN_WAV             1E84
SCORE_MSG           1C3C
SCREEN_H            1E52
SCREEN_W            1E50
SETUP_EARTH         1BB4
SETUP_EASY          18A8
SETUP_HARD          195C
SETUP_MARS          1BE4
SETUP_MEDIUM        1902
SETUP_MOON          1BCC
SET_OFF_GROUND      144E
SET_ON_GROUND       1426
SHOW_ADVANCED_INFO  1E78
SKIP_JUMP_UPDATE    1178
SKIP_MESSAGES       1404
SKIP_REDUCE         169C
SKIP_TOGGLE         112E
SKY_COLOUR          1E4C
SKY_EARTH           FFD21B
SKY_MARS            8AD3FF
SKY_MOON            0
SPACEBAR            20
START               1000
TC_CURSR_P          B
TC_DBL_BUF          5C
TC_EXIT             9
TC_KEYCODE          13
TC_SCREEN           21
TC_S_SIZE           0
TOGGLE_OFF          111A
TOGGLE_ON           1126
UPDATE              1142
UPDATE_MSG          1C60
V_MSG               1C7A
WHITE               FFFFFF
X_MSG               1C74
Y_MSG               1C77
