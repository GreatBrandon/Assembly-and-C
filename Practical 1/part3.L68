00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 15/01/2025 15:46:07

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      :Part 3
00000000                             3  * Written by :Brandon Jaroszczak C00296052
00000000                             4  * Date       :13/1/2025
00000000                             5  * Description:Practical 1 part 3
00000000                             6  *-----------------------------------------------------------
00001000                             7      ORG    $1000
00001000                             8  START:                  ; first instruction of program
00001000                             9  
00001000                            10  * Put program code here
00001000                            11  
00001000  123C 0064                 12      MOVE.B #$64, D1     ; Copy the byte of the literal hex value 64 into D1
00001004                            13                          ; LEA = Load Effective Address
00001004  43F9 0000101A             14      LEA text, A1        ; Copy the memory location of the variable "text" into register A1
0000100A  303C 000E                 15      MOVE #14, D0        ; Copy the literal 14 into register D0
0000100E  4E4F                      16      TRAP #15            ; TRAP #15 is used for I/O, the task number is stored in register D0 (in this case 14)
00001010                            17                          ; this displays the NULL terminated String at register A1 without CR,LF
00001010  303C 0003                 18      MOVE #3, D0         ; Copy the literal 3 into register D0
00001014  4E4F                      19      TRAP #15            ; This time TRAP #15 uses task number 3 (stored in D0)
00001016                            20                          ; Task 3 displays signed number in register D1.L 
00001016  FFFF FFFF                 21      SIMHALT             ; halt simulator
0000101A                            22  
0000101A                            23  * Put variables and constants here
0000101A= 44 61 74 61 20 52 ...     24  text dc.b 'Data Register: ',0   ;dc.b means "Define constant byte"
0000102A                            25                                  ;this stores the String 'Data Register: ' with the label "text"
0000102A                            26                                  ;0 represents a NULL terminator (0 in ascii is null) used to mark the end of the String
0000102A                            27                                  
0000102A                            28      END    START        ; last line of source

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
START               1000
TEXT                101A
